/**
 * bridge API generated from bridge.yang
 *
 * NOTE: This file is auto generated by polycube-codegen
 * https://github.com/polycube-network/polycube-codegen
 */

#pragma once

#include "../base/StpBase.h"

class Bridge;

using namespace polycube::service::model;

class Stp : public StpBase {
 public:
  Stp(Bridge &parent, const StpJsonObject &conf);
  virtual ~Stp();

  /// <summary>
  /// VLAN identifier for this entry
  /// </summary>
  uint16_t getVlan() override;

  /// <summary>
  /// Bridge priority for STP
  /// </summary>
  uint16_t getPriority() override;
  void setPriority(const uint16_t &value) override;

  /// <summary>
  /// Delay used by STP bridges for port state transition
  /// </summary>
  uint32_t getForwardDelay() override;
  void setForwardDelay(const uint32_t &value) override;

  /// <summary>
  /// Interval between transmissions of BPDU messages
  /// </summary>
  uint32_t getHelloTime() override;
  void setHelloTime(const uint32_t &value) override;

  /// <summary>
  /// Maximum age of a BPDU
  /// </summary>
  uint32_t getMaxMessageAge() override;
  void setMaxMessageAge(const uint32_t &value) override;
};
