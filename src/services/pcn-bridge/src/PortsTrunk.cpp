/**
 * bridge API generated from bridge.yang
 *
 * NOTE: This file is auto generated by polycube-codegen
 * https://github.com/polycube-network/polycube-codegen
 */

// TODO: Modify these methods with your own implementation

#include "PortsTrunk.h"
#include "Bridge.h"

PortsTrunk::PortsTrunk(Ports &parent, const PortsTrunkJsonObject &conf)
    : PortsTrunkBase(parent) {}

PortsTrunk::~PortsTrunk() {}
std::shared_ptr<PortsTrunkAllowed> PortsTrunk::getAllowed(
    const uint16_t &vlanid) {
  throw std::runtime_error("PortsTrunk::getEntry: Method not implemented");
}

std::vector<std::shared_ptr<PortsTrunkAllowed>> PortsTrunk::getAllowedList() {
  throw std::runtime_error(
      "PortsTrunk::getAllowedList: Method not implemented");
}

void PortsTrunk::addAllowed(const uint16_t &vlanid,
                            const PortsTrunkAllowedJsonObject &conf) {
  throw std::runtime_error("PortsTrunk::addAllowed: Method not implemented");
}

// Basic default implementation, place your extension here (if needed)
void PortsTrunk::addAllowedList(
    const std::vector<PortsTrunkAllowedJsonObject> &conf) {
  // call default implementation in base class
  PortsTrunkBase::addAllowedList(conf);
}

// Basic default implementation, place your extension here (if needed)
void PortsTrunk::replaceAllowed(const uint16_t &vlanid,
                                const PortsTrunkAllowedJsonObject &conf) {
  // call default implementation in base class
  PortsTrunkBase::replaceAllowed(vlanid, conf);
}

void PortsTrunk::delAllowed(const uint16_t &vlanid) {
  throw std::runtime_error("PortsTrunk::delAllowed: Method not implemented");
}

// Basic default implementation, place your extension here (if needed)
void PortsTrunk::delAllowedList() {
  // call default implementation in base class
  PortsTrunkBase::delAllowedList();
}

bool PortsTrunk::getNativeVlanEnabled() {
  throw std::runtime_error(
      "PortsTrunk::getNativeVlanEnabled: Method not implemented");
}

void PortsTrunk::setNativeVlanEnabled(const bool &value) {
  throw std::runtime_error(
      "PortsTrunk::setNativeVlanEnabled: Method not implemented");
}

uint16_t PortsTrunk::getNativeVlan() {
  throw std::runtime_error("PortsTrunk::getNativeVlan: Method not implemented");
}

void PortsTrunk::setNativeVlan(const uint16_t &value) {
  throw std::runtime_error("PortsTrunk::setNativeVlan: Method not implemented");
}
