/**
 * bridge API generated from bridge.yang
 *
 * NOTE: This file is auto generated by polycube-codegen
 * https://github.com/polycube-network/polycube-codegen
 */

// TODO: Modify these methods with your own implementation

#include "Fdb.h"
#include "Bridge.h"

Fdb::Fdb(Bridge &parent, const FdbJsonObject &conf) : FdbBase(parent) {}

Fdb::~Fdb() {}

uint32_t Fdb::getAgingTime() {
  throw std::runtime_error("Fdb::getAgingTime: Method not implemented");
}

void Fdb::setAgingTime(const uint32_t &value) {
  throw std::runtime_error("Fdb::setAgingTime: Method not implemented");
}
std::shared_ptr<FdbEntry> Fdb::getEntry(const uint16_t &vlan,
                                        const std::string &mac) {
  throw std::runtime_error("Fdb::getEntry: Method not implemented");
}

std::vector<std::shared_ptr<FdbEntry>> Fdb::getEntryList() {
  throw std::runtime_error("Fdb::getEntryList: Method not implemented");
}

void Fdb::addEntry(const uint16_t &vlan, const std::string &mac,
                   const FdbEntryJsonObject &conf) {
  throw std::runtime_error("Fdb::addEntry: Method not implemented");
}

// Basic default implementation, place your extension here (if needed)
void Fdb::addEntryList(const std::vector<FdbEntryJsonObject> &conf) {
  // call default implementation in base class
  FdbBase::addEntryList(conf);
}

// Basic default implementation, place your extension here (if needed)
void Fdb::replaceEntry(const uint16_t &vlan, const std::string &mac,
                       const FdbEntryJsonObject &conf) {
  // call default implementation in base class
  FdbBase::replaceEntry(vlan, mac, conf);
}

void Fdb::delEntry(const uint16_t &vlan, const std::string &mac) {
  throw std::runtime_error("Fdb::delEntry: Method not implemented");
}

// Basic default implementation, place your extension here (if needed)
void Fdb::delEntryList() {
  // call default implementation in base class
  FdbBase::delEntryList();
}

void Fdb::flush() {
  throw std::runtime_error("Fdb::: Method not implemented");
}
