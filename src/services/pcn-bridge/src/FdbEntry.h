/**
 * bridge API generated from bridge.yang
 *
 * NOTE: This file is auto generated by polycube-codegen
 * https://github.com/polycube-network/polycube-codegen
 */

#pragma once

#include "../base/FdbEntryBase.h"

class Fdb;

using namespace polycube::service::model;

class FdbEntry : public FdbEntryBase {
 public:
  FdbEntry(Fdb &parent, const FdbEntryJsonObject &conf);
  virtual ~FdbEntry();

  /// <summary>
  /// VLAN identifier
  /// </summary>
  uint16_t getVlan() override;

  /// <summary>
  /// MAC address of the filtering database entry
  /// </summary>
  std::string getMac() override;

  /// <summary>
  /// Type of filtering entry
  /// </summary>
  FdbEntryTypeEnum getType() override;

  /// <summary>
  /// Output port name
  /// </summary>
  std::string getPort() override;
  void setPort(const std::string &value) override;

  /// <summary>
  /// Age of the current filtering database entry
  /// </summary>
  uint32_t getAge() override;
};
