/**
* iptables API
* iptables API generated from iptables.yang
*
* OpenAPI spec version: 1.0.0
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/polycube-network/swagger-codegen.git
* branch polycube
*/


/* Do not edit this file manually */



#include "ChainInsertOutputJsonObject.h"
#include <regex>

namespace io {
namespace swagger {
namespace server {
namespace model {

ChainInsertOutputJsonObject::ChainInsertOutputJsonObject() :
  m_idIsSet (false) { }

ChainInsertOutputJsonObject::ChainInsertOutputJsonObject(nlohmann::json& val) :
  m_idIsSet (false) {
  if (val.count("id") != 0) {
    setId(val.at("id").get<uint32_t>());
  }
}

nlohmann::json ChainInsertOutputJsonObject::toJson() const {
  nlohmann::json val = nlohmann::json::object();

  if (m_idIsSet) {
    val["id"] = m_id;
  }


  return val;
}

nlohmann::json ChainInsertOutputJsonObject::helpKeys() {
  nlohmann::json val = nlohmann::json::object();


  return val;
}

nlohmann::json ChainInsertOutputJsonObject::helpElements() {
  nlohmann::json val = nlohmann::json::object();

  val["id"]["name"] = "id";
  val["id"]["type"] = "leaf"; // Suppose that type is leaf
  val["id"]["simpletype"] = "integer";
  val["id"]["description"] = R"POLYCUBE()POLYCUBE";
  val["id"]["example"] = R"POLYCUBE()POLYCUBE";

  return val;
}

nlohmann::json ChainInsertOutputJsonObject::helpWritableLeafs() {
  nlohmann::json val = nlohmann::json::object();

  val["id"]["name"] = "id";
  val["id"]["simpletype"] = "integer";
  val["id"]["description"] = R"POLYCUBE()POLYCUBE";
  val["id"]["example"] = R"POLYCUBE()POLYCUBE";

  return val;
}

nlohmann::json ChainInsertOutputJsonObject::helpComplexElements() {
  nlohmann::json val = nlohmann::json::object();


  return val;
}

std::vector<std::string> ChainInsertOutputJsonObject::helpActions() {
  std::vector<std::string> val;
  return val;
}

uint32_t ChainInsertOutputJsonObject::getId() const {
  return m_id;
}

void ChainInsertOutputJsonObject::setId(uint32_t value) {
  m_id = value;
  m_idIsSet = true;
}

bool ChainInsertOutputJsonObject::idIsSet() const {
  return m_idIsSet;
}

void ChainInsertOutputJsonObject::unsetId() {
  m_idIsSet = false;
}




}
}
}
}


