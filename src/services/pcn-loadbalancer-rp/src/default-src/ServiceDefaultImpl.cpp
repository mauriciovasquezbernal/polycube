/**
* lbrp API
* lbrp API generated from lbrp.yang
*
* OpenAPI spec version: 1.0.0
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/polycube-network/swagger-codegen.git
* branch polycube
*/


// These methods have a default implementation. Your are free to keep it or add your own


#include "../Service.h"


nlohmann::fifo_map<std::string, std::string>  Service::getKeys() {
  nlohmann::fifo_map<std::string, std::string>  r;

  r["vip"] = getVip();

  r["vport"] = getVport();

  r["proto"] = ServiceJsonObject::ServiceProtoEnum_to_string(getProto());

  return r;
}


std::shared_ptr<ServiceBackend> Service::getBackend(const std::string &ip){
  return ServiceBackend::getEntry(*this, ip);
}

std::vector<std::shared_ptr<ServiceBackend>> Service::getBackendList(){
  return ServiceBackend::get(*this);
}

void Service::addBackend(const std::string &ip, const ServiceBackendJsonObject &conf){
  ServiceBackend::create(*this, ip, conf);
}

void Service::addBackendList(const std::vector<ServiceBackendJsonObject> &conf){
  for(auto &i : conf){
    std::string ip_ = i.getIp();
    ServiceBackend::create(*this, ip_,  i);
  }
}

void Service::replaceBackend(const std::string &ip, const ServiceBackendJsonObject &conf){
  ServiceBackend::removeEntry(*this, ip);
  std::string ip_ = conf.getIp();
  ServiceBackend::create(*this, ip_, conf);

}

void Service::delBackend(const std::string &ip){
  ServiceBackend::removeEntry(*this, ip);
}

void Service::delBackendList(){
  ServiceBackend::remove(*this);
}



