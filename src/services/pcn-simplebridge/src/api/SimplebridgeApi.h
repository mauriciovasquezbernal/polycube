/**
* simplebridge API
* Simple L2 Bridge Service
*
* OpenAPI spec version: 1.0.0
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/polycube-network/swagger-codegen.git
* branch polycube
*/


/* Do not edit this file manually */

/*
* SimplebridgeApi.h
*
*/

#pragma once

#define POLYCUBE_SERVICE_NAME "simplebridge"


#include "polycube/services/response.h"
#include "polycube/services/shared_lib_elements.h"

#include "FdbJsonObject.h"
#include "FdbEntryJsonObject.h"
#include "FdbFlushOutputJsonObject.h"
#include "PortsJsonObject.h"
#include "SimplebridgeJsonObject.h"
#include <vector>


#ifdef __cplusplus
extern "C" {
#endif

Response create_simplebridge_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_simplebridge_fdb_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_simplebridge_fdb_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_simplebridge_fdb_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_simplebridge_fdb_flush_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response create_simplebridge_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_simplebridge_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response delete_simplebridge_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_simplebridge_fdb_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_simplebridge_fdb_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_simplebridge_fdb_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_simplebridge_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_simplebridge_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simplebridge_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simplebridge_fdb_aging_time_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simplebridge_fdb_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simplebridge_fdb_entry_age_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simplebridge_fdb_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simplebridge_fdb_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simplebridge_fdb_entry_port_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simplebridge_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simplebridge_loglevel_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simplebridge_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simplebridge_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simplebridge_ports_mac_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simplebridge_ports_peer_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simplebridge_ports_status_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simplebridge_ports_uuid_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simplebridge_type_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simplebridge_uuid_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response replace_simplebridge_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_simplebridge_fdb_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_simplebridge_fdb_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_simplebridge_fdb_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_simplebridge_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_simplebridge_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_simplebridge_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_simplebridge_fdb_aging_time_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_simplebridge_fdb_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_simplebridge_fdb_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_simplebridge_fdb_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_simplebridge_fdb_entry_port_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_simplebridge_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_simplebridge_loglevel_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_simplebridge_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_simplebridge_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_simplebridge_ports_peer_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);

Response simplebridge_by_id_help(HelpType type, const char *name, const Key *keys, size_t num_keys);
Response simplebridge_fdb_by_id_help(HelpType type, const char *name, const Key *keys, size_t num_keys);
Response simplebridge_fdb_entry_by_id_help(HelpType type, const char *name, const Key *keys, size_t num_keys);
Response simplebridge_fdb_entry_list_by_id_help(HelpType type, const char *name, const Key *keys, size_t num_keys);
Response simplebridge_list_by_id_help(HelpType type, const char *name, const Key *keys, size_t num_keys);
Response simplebridge_ports_by_id_help(HelpType type, const char *name, const Key *keys, size_t num_keys);
Response simplebridge_ports_list_by_id_help(HelpType type, const char *name, const Key *keys, size_t num_keys);

Response simplebridge_fdb_flush_by_id_help(HelpType type, const char *name, const Key *keys, size_t num_keys);


#ifdef __cplusplus
}
#endif

