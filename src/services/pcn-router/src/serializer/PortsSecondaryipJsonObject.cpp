/**
* router API
* Router Service
*
* OpenAPI spec version: 2.0
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/polycube-network/swagger-codegen.git
* branch polycube
*/


/* Do not edit this file manually */



#include "PortsSecondaryipJsonObject.h"
#include <regex>

namespace io {
namespace swagger {
namespace server {
namespace model {

PortsSecondaryipJsonObject::PortsSecondaryipJsonObject() :
  m_ipIsSet (false),
  m_netmaskIsSet (false) { }

PortsSecondaryipJsonObject::PortsSecondaryipJsonObject(nlohmann::json& val) :
  m_ipIsSet (false),
  m_netmaskIsSet (false) {

}

nlohmann::json PortsSecondaryipJsonObject::toJson() const {
  nlohmann::json val = nlohmann::json::object();

  val["ip"] = m_ip;
  val["netmask"] = m_netmask;

  return val;
}

nlohmann::json PortsSecondaryipJsonObject::helpKeys() {
  nlohmann::json val = nlohmann::json::object();

  val["ip"]["name"] = "ip";
  val["ip"]["type"] = "key";
  val["ip"]["simpletype"] = "string";
  val["ip"]["description"] = R"POLYCUBE(Seconadary IP address of the port)POLYCUBE";
  val["ip"]["example"] = R"POLYCUBE(207.46.131.1)POLYCUBE";
  val["netmask"]["name"] = "netmask";
  val["netmask"]["type"] = "key";
  val["netmask"]["simpletype"] = "string";
  val["netmask"]["description"] = R"POLYCUBE(Secondary netmask of the port)POLYCUBE";
  val["netmask"]["example"] = R"POLYCUBE(255.255.255.0)POLYCUBE";

  return val;
}

nlohmann::json PortsSecondaryipJsonObject::helpElements() {
  nlohmann::json val = nlohmann::json::object();


  return val;
}

nlohmann::json PortsSecondaryipJsonObject::helpWritableLeafs() {
  nlohmann::json val = nlohmann::json::object();


  return val;
}

nlohmann::json PortsSecondaryipJsonObject::helpComplexElements() {
  nlohmann::json val = nlohmann::json::object();


  return val;
}

std::vector<std::string> PortsSecondaryipJsonObject::helpActions() {
  std::vector<std::string> val;
  return val;
}

std::string PortsSecondaryipJsonObject::getIp() const {
  return m_ip;
}

void PortsSecondaryipJsonObject::setIp(std::string value) {
  m_ip = value;
  m_ipIsSet = true;
}

bool PortsSecondaryipJsonObject::ipIsSet() const {
  return m_ipIsSet;
}





std::string PortsSecondaryipJsonObject::getNetmask() const {
  return m_netmask;
}

void PortsSecondaryipJsonObject::setNetmask(std::string value) {
  m_netmask = value;
  m_netmaskIsSet = true;
}

bool PortsSecondaryipJsonObject::netmaskIsSet() const {
  return m_netmaskIsSet;
}






}
}
}
}


