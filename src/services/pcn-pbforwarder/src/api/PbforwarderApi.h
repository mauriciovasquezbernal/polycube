/**
* pbforwarder API
* Policy-Based Forwarder Service
*
* OpenAPI spec version: 2.0
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/polycube-network/swagger-codegen.git
* branch polycube
*/


/* Do not edit this file manually */

/*
* PbforwarderApi.h
*
*/

#pragma once

#define POLYCUBE_SERVICE_NAME "pbforwarder"


#include "polycube/services/response.h"
#include "polycube/services/shared_lib_elements.h"

#include "PbforwarderJsonObject.h"
#include "PortsJsonObject.h"
#include "RulesJsonObject.h"
#include <vector>


#ifdef __cplusplus
extern "C" {
#endif

Response create_pbforwarder_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_pbforwarder_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_pbforwarder_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_pbforwarder_rules_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_pbforwarder_rules_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response delete_pbforwarder_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_pbforwarder_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_pbforwarder_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_pbforwarder_rules_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_pbforwarder_rules_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_loglevel_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_ports_peer_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_ports_status_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_ports_uuid_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_rules_action_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_rules_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_rules_dst_ip_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_rules_dst_mac_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_rules_dst_port_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_rules_in_port_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_rules_l4_proto_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_rules_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_rules_out_port_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_rules_src_ip_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_rules_src_mac_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_rules_src_port_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_rules_vlan_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_type_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_pbforwarder_uuid_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response replace_pbforwarder_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_pbforwarder_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_pbforwarder_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_pbforwarder_rules_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_pbforwarder_rules_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_pbforwarder_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_pbforwarder_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_pbforwarder_loglevel_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_pbforwarder_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_pbforwarder_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_pbforwarder_ports_peer_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_pbforwarder_rules_action_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_pbforwarder_rules_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_pbforwarder_rules_dst_ip_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_pbforwarder_rules_dst_mac_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_pbforwarder_rules_dst_port_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_pbforwarder_rules_in_port_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_pbforwarder_rules_l4_proto_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_pbforwarder_rules_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_pbforwarder_rules_out_port_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_pbforwarder_rules_src_ip_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_pbforwarder_rules_src_mac_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_pbforwarder_rules_src_port_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_pbforwarder_rules_vlan_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);

Response pbforwarder_by_id_help(HelpType type, const char *name, const Key *keys, size_t num_keys);
Response pbforwarder_list_by_id_help(HelpType type, const char *name, const Key *keys, size_t num_keys);
Response pbforwarder_ports_by_id_help(HelpType type, const char *name, const Key *keys, size_t num_keys);
Response pbforwarder_ports_list_by_id_help(HelpType type, const char *name, const Key *keys, size_t num_keys);
Response pbforwarder_rules_by_id_help(HelpType type, const char *name, const Key *keys, size_t num_keys);
Response pbforwarder_rules_list_by_id_help(HelpType type, const char *name, const Key *keys, size_t num_keys);



#ifdef __cplusplus
}
#endif

